workDir="<%= nextflowOutDir %>/work"
params {

    //which modules are run
    modules {
        sra2fastq = <% if(typeof source != "undefined" && source === 'sra') { %>true<% } else { %>false<%} %>
        faqcs = false
        hostRemoval = false
        runAssembly = true
        annotation = false
        binning = false
        phageFinder = true //true by default -- will run if non-viral reads are annotated
        snpTree = false
        readsTaxonomyAssignment = <% if(typeof readTax != "undefined") { %><%= readTax %><% } else { %>false<%} %>
        contigsTaxonomyAssignment = <% if(typeof contigTax != "undefined") { %><%= contigTax %><% } else { %>false<%} %>
        secondaryMetaboliteAnalysis = false
    }

    outputLocations {
        //everything in its separate output for the moment
        sra2fastqOutDir =  "<%= sraOutdir %>"
        processProvidedContigsOutDir = ""
        qcOutDir = ""
        hostRemovalOutDir = ""
        assemblyOutDir = ""
        contigsTaxonomyOutDir = "<%= projOutdir %>"
        phageFinderOutDir = ""
        binningOutDir = ""
        readsTaxonomyOutDir = "<%= projOutdir %>"
        annotationOutDir = ""
        smaOutDir = ""
        phylogenyOutDir = ""
        reportOutDir = "<%= projOutdir %>"

    }

    //module parameters -- passed directly into subworkflows according to best practices
    //these are the default values
    shared {
        inputFastq = <% if(typeof inputFastq != "undefined") { %><%- JSON.stringify(inputFastq) %> %><% } else { %>[]<%} %>
        inputFastq2 = <% if(typeof inputFastq2 != "undefined") { %><%- JSON.stringify(inputFastq2) %> %><% } else { %>[]<%} %>
        pairedFile = <% if(typeof paired != "undefined") { %><%= paired %><% } else { %>false<%} %>
        inputContigs = <% if(typeof inputFasta != "undefined") { %>"<%= inputFasta %>"<% } else { %>"${projectDir}/nf_assets/NO_FILE3"<%} %>
        assembledContigs = "${projectDir}/nf_assets/NO_FILE3" //contigs provided to bypass assembly
        projName = "<%= project %>"
        fastqSource = <% if(typeof seqPlatform != "undefined") { %>"<%= seqPlatform %>"<% } else { %>null<%} %>
    }

    sra2fastq {
        accessions =  <% if(typeof accessions != "undefined") { %><%- JSON.stringify(accessions) %> %><% } else { %>[]<%} %>
    }

    faqcs{
        trimQual = 20
        trim5end = 0
        trim3end = 0
        trimAdapter = false
        trimPolyA = false
        artifactFile = "${projectDir}/nf_assets/NO_FILE3"
        minLen = 50
        avgQual = 0
        numN = 2
        filtLC = 0.85
        filtPhiX = false
    }

    hostRemoval {
        host = ["${projectDir}/nf_assets/NO_FILE3"]
        similarity = 90
        bwaMemOptions = null
    }

    assembly {
        //assemblers: IDBA_UD, SPAdes, Unicycler, Megahit, LRASM
        assembler = "IDBA_UD"
        minContigSize = 200
        idba{
            maxK = null
            minK = 31
            step = 20
        }
        spades {
            pacbio = "${projectDir}/nf_assets/NO_FILE3"
            nanopore = "${projectDir}/nf_assets/NO_FILE4"
            algorithm = null
        }
        megahit {
            preset = null
        }
        unicycler {
            longreads = "${projectDir}/nf_assets/NO_FILE3"
            minLongReads = 2000
            bridgingMode = "normal"
        }
        lrasm {
            minLength = 400
            preset = null
            algorithm = null
            ec = null
            numConsensus = null
        }
    }
    
    r2c {
        r2c_aligner = "bwa"
        r2c_aligner_options = ""
        r2g_max_clip = null
        extractUnmapped = false
        rowLimit = null
    }
    
    annotation {
        contigSizeForAnnotation = 700
        taxKingdom = null
        //annotaters: prokka, ratt
        annotateProgram = "prokka" //default
        customProtein = "${projectDir}/nf_assets/NO_FILE" //setup for optional file pattern
        customHMM = "${projectDir}/nf_assets/NO_FILE2"
        sourceGBK = null
        evalue = null
        gcode = null
        keggView = false
    }

    binning {
        binningMinLength = 1000
        binningMaxItr = 50
        binningProb = 0.9
        //107 or 40
        binningMarkerSet =107
        binningAbundFile = "${projectDir}/nf_assets/NO_FILE3"
        doCheckM = false
    }

    readsTaxonomy {
        splitTrimMinQ =  <% if(typeof splitTrimMinQ != "undefined") { %><%= splitTrimMinQ %><% } else { %>20<%} %>
        //RTA tools: gottcha-genDB-b,gottcha-speDB-b,gottcha-strDB-b,gottcha-genDB-v,gottcha-speDB-v,gottcha-strDB-v,gottcha2-speDB-b,pangia,bwa,metaphlan4,kraken2,centrifuge,diamond
        enabledTools = <% if(typeof enabledTools != "undefined") { %>"<%= enabledTools %>"<% } else { %>"gottcha-genDB-b,gottcha-speDB-b,gottcha-strDB-b,gottcha-genDB-v,gottcha-speDB-v,gottcha-strDB-v,gottcha2-speDB-b,pangia,bwa,metaphlan4,kraken2,centrifuge,diamond"<%} %>
        baseDB = "${projectDir}/../../../database"
        custom_gottcha_genDB_b =  <% if(typeof custom_gottcha_genDB_b != "undefined" && custom_gottcha_genDB_b) { %>"<%= custom_gottcha_genDB_b %>"<% } else { %>null<%} %>
        custom_gottcha_speDB_b =  <% if(typeof custom_gottcha_speDB_b != "undefined" && custom_gottcha_speDB_b) { %>"<%= custom_gottcha_speDB_b %>"<% } else { %>null<%} %>
        custom_gottcha_strDB_b =  <% if(typeof custom_gottcha_strDB_b != "undefined" && custom_gottcha_strDB_b) { %>"<%= custom_gottcha_strDB_b %>"<% } else { %>null<%} %>
        custom_gottcha_genDB_v =  <% if(typeof custom_gottcha_genDB_v != "undefined" && custom_gottcha_genDB_v) { %>"<%= custom_gottcha_genDB_v %>"<% } else { %>null<%} %>
        custom_gottcha_speDB_v =  <% if(typeof custom_gottcha_speDB_v != "undefined" && custom_gottcha_speDB_v) { %>"<%= custom_gottcha_speDB_v %>"<% } else { %>null<%} %>
        custom_gottcha_strDB_v =  <% if(typeof  custom_gottcha_strDB_v != "undefined" &&  custom_gottcha_strDB_v) { %>"<%= custom_gottcha_strDB_v %>"<% } else { %>null<%} %>
        custom_gottcha2_speDB_b = <% if(typeof  custom_gottcha2_speDB_b != "undefined" &&  custom_gottcha2_speDB_b) { %>"<%= custom_gottcha2_speDB_b %>"<% } else { %>"${projectDir}/../../../database/GOTTCHA2/RefSeq-r220_BAVxH-cg/gottcha_db.species.fna"<%} %>
        custom_gottcha2_speDB_v =  <% if(typeof custom_gottcha2_speDB_v != "undefined" && custom_gottcha2_speDB_v) { %>"<%= custom_gottcha2_speDB_v %>"<% } else { %>null<%} %>
        custom_gottcha2_genDB_v=  <% if(typeof custom_gottcha2_genDB_v != "undefined" && custom_gottcha2_genDB_v) { %>"<%= custom_gottcha2_genDB_v %>"<% } else { %>null<%} %>
        custom_bwa_db= <% if(typeof custom_bwa_db != "undefined" && custom_bwa_db) { %>"<%= custom_bwa_db %>"<% } else { %>null<%} %>
        custom_metaphlan_db= <% if(typeof custom_metaphlan_db != "undefined" && custom_metaphlan_db) { %>"<%= custom_metaphlan_db %>"<% } else { %>null<%} %>
        custom_kraken_db= <% if(typeof custom_kraken_db != "undefined" && custom_kraken_db) { %>"<%= custom_kraken_db %>"<% } else { %>null<%} %>
        custom_pangia_db= <% if(typeof custom_pangia_db != "undefined" && custom_pangia_db) { %>"<%= custom_pangia_db %>"<% } else { %>null<%} %>
        custom_diamond_db= <% if(typeof custom_diamond_db != "undefined" && custom_diamond_db) { %>"<%= custom_diamond_db %>"<% } else { %>null<%} %>
        custom_centrifuge_db = <% if(typeof custom_centrifuge_db != "undefined" && custom_centrifuge_db) { %>"<%= custom_centrifuge_db %>"<% } else { %>null<%} %>
    }

    contigsTaxonomy {
        miccrDB = "${projectDir}/../../../database/miccrDB"
        rowLimit = 3000
    }

    SMA {
        database = "${projectDir}/../../../database/antiSMASH" //path to downloaded database location (download-antismash-databases --database-dir <DBPATH>)
        smaTaxon = 'bacteria'
        clusterblast = false 
        subclusterblast = true
        knownclusterblast = true
        mibig = false
        smcogs = false 
        pfam2go = false
        asf = true
        rre = true
        fullhmm = false 
        tigrfam = false
        cassis = false //only with fungi
    }

    snpTree {
        //SNP DB path. Should contain SNPdb, bwa_index, NCBI genomes
        snpDBbase="${projectDir}/../../../database"
        //SNP databases: Ecoli, Yersinia, Francisella, Brucella, Bacillus
        snpDBname="Ecoli"
        //List of genome name from NCBI genomes see $EDGE/edge_ui/data/Ref_list.json
        snpGenomes= []
        //User-provided reference genomes
        snpGenomesFiles= []
        //A reference genome from above two options for reads/contigs mapping
        snpRefGenome= null
        // SRA accessions ByrRun, ByExp, BySample, ByStudy
        phylAccessions = []
        //FastTree or RAxML
        treeMaker= "FastTree"
        phameBootstrap= false
        phameBootstrapNum=100
    }
}

//container settings
apptainer {
    enabled = true
    pullTimeout = "1 hour"
    runOptions = "--compat"
}

//discover and auto-bind subworkflow bin folders
nextflow.enable.moduleBinaries = true

//which containers to use for which processes
process {
    withLabel: 'sra2fastq' {
        container = 'kaijli/sra2fastq:1.6.3'
    }
    withLabel: 'countFastq' {
        container = 'apwat/count_fastq:0.3'
    }
    withLabel: 'processContigs' {
        container = 'apwat/count_fastq:0.2'
    }
    withLabel: 'qc'{
        container= 'apwat/run_faqcs:1.6'
    }
    withLabel: 'hostRemoval' {
        container= 'apwat/host_removal:1.7.5'
    }
    withLabel: 'assembly' {
        container = 'apwat/run_assembly:1.6'
    }
    withLabel: 'r2c' {
        container = 'apwat/run_r2c:1.7'
    }
    withLabel: 'rta' {
        container = 'apwat/reads_taxonomy:1.14'
    }
    withLabel: 'cta' {
        container = 'apwat/contigs_taxonomy:1.11'
    }
    withLabel: 'annotation' {
        container = 'apwat/annotation:0.5'
    }
    withLabel: 'phageFinder' {
        container = 'apwat/phage_finder:1.1'
    }
    withLabel: 'sma' {
        container = 'apwat/sma:0.14'
    }
    withLabel: 'binning' {
        container = 'apwat/reads_binning:0.1'
    }
    withLabel: 'phyl' {
        container = 'apwat/snp_tree:0.6'
    }
    withLabel: 'report' {
        container = 'apwat/edge_report:0.5'
    }
}

//submission rate limit: needed for sra2fastq to operate correctly
executor {
    submitRateLimit = '1/5sec'
}

report {
    enabled = true
    file = '<%= nextflowOutDir %>/report.html'
    overwrite = true
}

timeline {
    enabled = true
    file = '<%= nextflowOutDir %>/timeline.html'
    overwrite = true
}

trace {
    enabled = true
    file = '<%= nextflowOutDir %>/trace.txt'
    fields = 'name,status,start,complete,duration'
    overwrite = true
}

includeConfig "<%= executor_config %>"